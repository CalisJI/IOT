<dx:ThemedWindow 
    x:Class="WPF_TEST.CustomAppointmentWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxsch="http://schemas.devexpress.com/winfx/2008/xaml/scheduling"
    xmlns:dxscht="http://schemas.devexpress.com/winfx/2008/xaml/scheduling/themekeys"
    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" 
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="450"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local1="clr-namespace:WPF_TEST.ViewModel" xmlns:common="clr-namespace:WPF_TEST.Common" 
    x:Name="window" ResizeMode="NoResize">

    
    <dxmvvm:Interaction.Behaviors>
        <dxmvvm:CurrentWindowService ClosingCommand="{Binding WindowClosingCommand}"/>
        
        <dxmvvm:KeyToCommand KeyGesture="Esc" EventName="KeyDown" MarkRoutedEventsAsHandled="True" Command="{DXCommand Execute='@e(window).Close()'}"/>
    </dxmvvm:Interaction.Behaviors>
    
    <DockPanel>
        <dxr:RibbonControl DockPanel.Dock="Top" Style="{DynamicResource {dxscht:AppointmentWindowCommandBarThemeKey ResourceKey=RibbonControl}}" Height="150" >
            <dxr:RibbonControl.ToolbarItems>
                <dxb:BarButtonItem x:Name="toolbar_barItemSave" Style="{DynamicResource {dxscht:AppointmentWindowCommandBarThemeKey ResourceKey=Items_Actions_Save}}"/>
                <dxb:BarButtonItem x:Name="toolbar_barItemPrevious" Style="{DynamicResource {dxscht:AppointmentWindowCommandBarThemeKey ResourceKey=Items_Actions_Previous}}"/>
                <dxb:BarButtonItem x:Name="toolbar_barItemNext" Style="{DynamicResource {dxscht:AppointmentWindowCommandBarThemeKey ResourceKey=Items_Actions_Next}}"/>
                <dxb:BarButtonItem x:Name="toolbar_barItemDelete" Style="{DynamicResource {dxscht:AppointmentWindowCommandBarThemeKey ResourceKey=Items_Actions_Delete}}"/>
            </dxr:RibbonControl.ToolbarItems>
            <dxr:RibbonDefaultPageCategory Style="{DynamicResource {dxscht:AppointmentWindowCommandBarThemeKey ResourceKey=Categories_Default}}">
                <dxr:RibbonPage Style="{DynamicResource {dxscht:AppointmentWindowCommandBarThemeKey ResourceKey=Pages_Appointment}}">
                    <dxr:RibbonPageGroup Style="{DynamicResource {dxscht:AppointmentWindowCommandBarThemeKey ResourceKey=Groups_Actions}}">
                        <dxb:BarButtonItem x:Name="barItemSaveAndClose" Style="{DynamicResource {dxscht:AppointmentWindowCommandBarThemeKey ResourceKey=Items_Actions_SaveAndClose}}"/>
                        <dxb:BarButtonItem x:Name="barItemDelete" Style="{DynamicResource {dxscht:AppointmentWindowCommandBarThemeKey ResourceKey=Items_Actions_Delete}}"/>
                    </dxr:RibbonPageGroup>
                    
                </dxr:RibbonPage>
            </dxr:RibbonDefaultPageCategory>
        </dxr:RibbonControl>
        
        <dxlc:LayoutControl x:Name="validationContainer" Orientation="Vertical" dxe:ValidationService.IsValidationContainer="True">
            <dxlc:LayoutItem Label="Name">
                <dxe:TextEdit x:Name="editorSubject" EditValue="{Binding Subject,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Style="{DynamicResource {dxscht:AppointmentWindowThemeKey ResourceKey=Editor_Subject}}">
                    <dxmvvm:Interaction.Behaviors>
                        <dxmvvm:FocusBehavior/>
                    </dxmvvm:Interaction.Behaviors>
                </dxe:TextEdit>
            </dxlc:LayoutItem>
            <dxlc:LayoutItem Label="Priority">
                <dxe:ComboBoxEdit ItemsSource="{dxe:EnumItemsSource EnumType=local1:TaskPriority,AllowImages=True,UseNumericEnumValue=True}"
                                  
                                  EditValue="{Binding Location,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                  >
                    
                </dxe:ComboBoxEdit>
            </dxlc:LayoutItem>
            <dxlc:LayoutItem x:Name="layoutStartTime"  Style="{DynamicResource {dxscht:AppointmentWindowThemeKey ResourceKey=LayoutItem_StartTime}}">
                <DockPanel>
                    <dxe:DateEdit x:Name="editorStartDate" DockPanel.Dock="Left" Width="150" Style="{DynamicResource {dxscht:AppointmentWindowThemeKey ResourceKey=Editor_StartDate}}"/>
                    <dxe:TextEdit x:Name="editorStartTime" DockPanel.Dock="Left" Width="150"  Style="{DynamicResource {dxscht:AppointmentWindowThemeKey ResourceKey=Editor_StartTime}}"/>
                
                </DockPanel>
            </dxlc:LayoutItem>
            <dxlc:LayoutItem x:Name="layoutEndTime"  Style="{DynamicResource {dxscht:AppointmentWindowThemeKey ResourceKey=LayoutItem_EndTime}}">
                <DockPanel>
                    <dxe:DateEdit x:Name="editorEndDate" DockPanel.Dock="Left" Width="150" Style="{DynamicResource {dxscht:AppointmentWindowThemeKey ResourceKey=Editor_EndDate}}"/>
                    <dxe:TextEdit x:Name="editorEndTime" DockPanel.Dock="Left" Width="150" Style="{DynamicResource {dxscht:AppointmentWindowThemeKey ResourceKey=Editor_EndTime}}"/>
                    
                </DockPanel>
            </dxlc:LayoutItem>
            <dxlc:LayoutItem Style="{DynamicResource {dxscht:AppointmentWindowThemeKey ResourceKey=LayoutItem_Description}}">
                <dxe:TextEdit 
                    x:Name="editorDescription"
                    Style="{DynamicResource {dxscht:AppointmentWindowThemeKey ResourceKey=Editor_Description}}"
                    EditValue="{Binding Description ,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
            </dxlc:LayoutItem>
        </dxlc:LayoutControl>
    </DockPanel>
</dx:ThemedWindow>

